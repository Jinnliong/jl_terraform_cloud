name: Deploy to Amazon ECS

on:
  push:
    branches:
      - main

env:            
  AWS_REGION: ap-southeast-1           
  ECR_REPOSITORY: jinnliong-terraform-ecr       
  ECS_SERVICE: ecsdemo         
  ECS_CLUSTER: jinnliong-terraform-ecs                    
  CONTAINER_NAME: ecs-sample
  TASKDEF: ecsdemo
                                               
jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Print Working Directory
      run: pwd

    - name: Checkout
      uses: actions/checkout@v3
      with:
          path: ./envs/dev/ecs

    - name: Print Working Directory
      run: pwd

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      
    - name: Print Working Directory
      run: pwd

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        sudo apt-get update && sudo apt-get install xxd  
        docker --version
        echo "Full IMAGE_TAG: $IMAGE_TAG" 
        echo -n $VALID_TAG | xxd     
        docker buildx build -t ... -f envs/dev/ecs/Dockerfile /home/runner/work/jl_terraform_cloud/jl_terraform_cloud/envs/dev/ecs
        # Change the format for use in the tag - for example:
        VALID_TAG=$(echo $IMAGE_TAG | cut -c 1-7 | tr -cd '[:lower:]')
        echo "Full IMAGE_TAG: $IMAGE_TAG"
        echo "Generated VALID_TAG: $VALID_TAG"
        docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:$VALID_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY -a  # Push both tags
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$VALID_TAG" >> $GITHUB_OUTPUT 

    - name: Download task definition
      run: |
        aws ecs describe-task-definition --task-definition $TASKDEF --query taskDefinition > task-definition.json

    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: task-definition.json
        container-name: ${{ env.CONTAINER_NAME }}
        image: ${{ steps.build-image.outputs.image }}

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: ${{ env.ECS_SERVICE }}
        cluster: ${{ env.ECS_CLUSTER }}
        wait-for-service-stability: true